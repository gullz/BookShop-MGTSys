<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>